{"ast":null,"code":"import _classCallCheck from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/Documents/React/leitura/src/components/EditComment.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nvar EditComment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditComment, _Component);\n\n  function EditComment() {\n    _classCallCheck(this, EditComment);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EditComment).apply(this, arguments));\n  }\n\n  _createClass(EditComment, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        className: \"container mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"jumbotron\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, \"New Comment\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"postContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, \"Comment\"), React.createElement(\"textarea\", {\n        className: \"form-control\",\n        id: \"postContent\",\n        rows: \"3\",\n        onChange: function onChange(event) {\n          return _this.onChangeBody(event);\n        },\n        value: this.state.body,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"postAuthor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Author\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"postAuthor\",\n        onChange: function onChange(event) {\n          return _this.onChangeAuthor(event);\n        },\n        value: this.state.author,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        onClick: function onClick(event) {\n          return _this.onSaveForm(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Save\")));\n    }\n  }]);\n\n  return EditComment;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nexport default connect(mapStateToProps)(EditComment);","map":{"version":3,"sources":["/Users/admin/Documents/React/leitura/src/components/EditComment.js"],"names":["React","Component","connect","EditComment","event","onChangeBody","state","body","onChangeAuthor","author","onSaveForm","mapStateToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,W;;;;;;;;;;;;;6BACO;AAAA;;AACL,aACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAU,QAAA,SAAS,EAAC,cAApB;AAAmC,QAAA,EAAE,EAAC,aAAtC;AAAoD,QAAA,IAAI,EAAC,GAAzD;AAA6D,QAAA,QAAQ,EAAE,kBAACC,KAAD;AAAA,iBAAW,KAAI,CAACC,YAAL,CAAkBD,KAAlB,CAAX;AAAA,SAAvE;AAA4G,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWC,IAA9H;AAAoI,QAAA,QAAQ,MAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAFJ,EAMI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,cAA7B;AAA4C,QAAA,EAAE,EAAC,YAA/C;AAA4D,QAAA,QAAQ,EAAE,kBAACH,KAAD;AAAA,iBAAW,KAAI,CAACI,cAAL,CAAoBJ,KAApB,CAAX;AAAA,SAAtE;AAA6G,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWG,MAA/H;AAAuI,QAAA,QAAQ,MAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CANJ,EAWI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAkD,QAAA,OAAO,EAAE,iBAACL,KAAD;AAAA,iBAAW,KAAI,CAACM,UAAL,CAAgBN,KAAhB,CAAX;AAAA,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,CADJ,CADJ;AAiBH;;;;EAnBqBH,S;;AAsB1B,IAAMU,eAAe,GAAG,SAAlBA,eAAkB,CAACL,KAAD,EAAW;AAC/B,SAAOA,KAAP;AACH,CAFD;;AAIA,eAAeJ,OAAO,CAACS,eAAD,CAAP,CAAyBR,WAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nclass EditComment extends Component {\n    render() {\n        return (\n            <div className=\"container mt-2\">\n                <form className=\"jumbotron\">\n                    <h2>New Comment</h2>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"postContent\">Comment</label>\n                        <textarea className=\"form-control\" id=\"postContent\" rows=\"3\" onChange={(event) => this.onChangeBody(event)} value={this.state.body} required></textarea>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"postAuthor\">Author</label>\n                        <input type=\"text\" className=\"form-control\" id=\"postAuthor\" onChange={(event) => this.onChangeAuthor(event)} value={this.state.author} required></input>\n                    </div>\n\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={(event) => this.onSaveForm(event)}>Save</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nexport default connect(mapStateToProps)(EditComment)"]},"metadata":{},"sourceType":"module"}