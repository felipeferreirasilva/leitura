{"ast":null,"code":"import _classCallCheck from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/Documents/React/leitura/src/components/Comments.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getCommentsAsync } from '../actions';\n\nvar Comments =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Comments, _Component);\n\n  function Comments() {\n    _classCallCheck(this, Comments);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Comments).apply(this, arguments));\n  }\n\n  _createClass(Comments, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch(getCommentsAsync(this.props.postId));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"jumbotron\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"Comments\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, this.props.comments.length > 0 && this.props.comments.map(function (comment) {\n        return React.createElement(\"div\", {\n          className: \"jumbotron\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          key: comment.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, comment.body));\n      }))));\n    }\n  }]);\n\n  return Comments;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nexport default connect(mapStateToProps)(Comments);","map":{"version":3,"sources":["/Users/admin/Documents/React/leitura/src/components/Comments.js"],"names":["React","Component","connect","getCommentsAsync","Comments","props","dispatch","postId","comments","length","map","comment","id","body","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,YAAjC;;IAEMC,Q;;;;;;;;;;;;;wCACkB;AAChB,WAAKC,KAAL,CAAWC,QAAX,CAAoBH,gBAAgB,CAAC,KAAKE,KAAL,CAAWE,MAAZ,CAApC;AACH;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKF,KAAL,CAAWG,QAAX,CAAoBC,MAApB,GAA6B,CAA7B,IACG,KAAKJ,KAAL,CAAWG,QAAX,CAAoBE,GAApB,CAAwB,UAAAC,OAAO;AAAA,eAC3B;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAI,UAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsBD,OAAO,CAACE,IAA9B,CADA,CAD2B;AAAA,OAA/B,CAFR,CAFJ,CADJ,CADJ;AAgBH;;;;EAtBkBZ,S;;AAyBvB,IAAMa,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAOA,KAAP;AACH,CAFD;;AAIA,eAAeb,OAAO,CAACY,eAAD,CAAP,CAAyBV,QAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getCommentsAsync } from '../actions'\n\nclass Comments extends Component {\n    componentDidMount() {\n        this.props.dispatch(getCommentsAsync(this.props.postId))\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"jumbotron\">\n                    <h3>Comments</h3>\n                    <ul>\n                        {this.props.comments.length > 0 &&\n                            this.props.comments.map(comment => (\n                                <div className=\"jumbotron\">\n                                <li key={comment.id}>{comment.body}</li>\n                                </div>\n                            ))\n                        }\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nexport default connect(mapStateToProps)(Comments)"]},"metadata":{},"sourceType":"module"}