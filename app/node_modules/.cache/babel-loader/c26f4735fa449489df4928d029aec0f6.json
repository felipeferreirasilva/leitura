{"ast":null,"code":"import axios from 'axios';\nimport { URL, KEY } from '../util'; // CRIA UMA CONSTATE PARA DAR NOME A ACTION, EVITA ERROS DE DIGITAÇAO\n\nexport var GET_POSTS = 'GET_POSTS';\nexport var GET_POST = 'GET_POST';\nexport var ADD_POST = 'ADD_POST';\nexport var DELETE_POST = 'DELETE_POST';\nexport var VOTE_POST = 'VOTE_POST';\nexport var GET_COMMENTS = 'GET_COMMENTS';\nexport var ADD_COMMENT = 'ADD_COMMENT';\nexport var DELETE_COMMENT = 'DELETE_COMMENT'; // CRIA UMA ACTION ASYCRONA\n\nexport var getPostsAsync = function getPostsAsync() {\n  return function (dispatch) {\n    // FAZ A REQUISIÇAO AO AXIOS E EM SEGUIDA CHAMA GERA A ACTION COM O TYPE E DADOS DO SERVIDOR\n    axios.get(\"\".concat(URL, \"posts\"), {\n      headers: {\n        'Authorization': KEY\n      }\n    }).then(function (response) {\n      dispatch({\n        type: GET_POSTS,\n        posts: response.data\n      });\n    });\n  };\n}; // ACTION ASYCRONA COM PARAMETRO\n\nexport var getPostAsync = function getPostAsync(id) {\n  return function (dispatch) {\n    axios.get(\"\".concat(URL, \"posts/\").concat(id), {\n      headers: {\n        'Authorization': KEY\n      }\n    }).then(function (response) {\n      dispatch({\n        type: GET_POST,\n        post: response.data\n      });\n    });\n  };\n};\nexport var addPost = function addPost(post) {\n  return function (dispatch) {\n    axios.post(\"\".concat(URL, \"posts\"), post, {\n      headers: {\n        'Authorization': KEY\n      }\n    }).then(function () {\n      dispatch({\n        type: ADD_POST\n      });\n      dispatch(getPostsAsync());\n    });\n  };\n};\nexport var deletePost = function deletePost(id) {\n  return function (dispatch) {\n    axios.delete(\"\".concat(URL, \"posts/\").concat(id), {\n      headers: {\n        'Authorization': KEY\n      }\n    }).then(function () {\n      dispatch({\n        type: DELETE_POST\n      });\n      dispatch(getPostsAsync());\n    });\n  };\n};\nexport var votePost = function votePost(id) {\n  var vote = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  return function (dispatch) {\n    axios.post(\"\".concat(URL, \"posts/\").concat(id), {\n      voteScore: valor\n    }, {\n      headers: {\n        'Authorization': KEY\n      }\n    }).then(function (response) {\n      dispatch({\n        type: VOTE_POST\n      });\n      console.log(response);\n    });\n  };\n};\nexport var getCommentsAsync = function getCommentsAsync(id) {\n  return function (dispatch) {\n    axios.get(\"\".concat(URL, \"posts/\").concat(id, \"/comments\"), {\n      headers: {\n        'Authorization': KEY\n      }\n    }).then(function (response) {\n      dispatch({\n        type: GET_COMMENTS,\n        comments: response.data\n      });\n    });\n  };\n};\nexport var addComment = function addComment(comment, postId) {\n  return function (dispatch) {\n    axios.post(\"\".concat(URL, \"comments\"), comment, {\n      headers: {\n        'Authorization': KEY\n      }\n    }).then(function () {\n      dispatch({\n        type: ADD_COMMENT\n      });\n      dispatch(getCommentsAsync(postId));\n    });\n  };\n};\nexport var deleteCommentAsync = function deleteCommentAsync(commentId, postId) {\n  return function (dispatch) {\n    axios.delete(\"\".concat(URL, \"comments/\").concat(commentId), {\n      headers: {\n        'Authorization': KEY\n      }\n    }).then(function (response) {\n      dispatch({\n        type: DELETE_COMMENT\n      });\n      dispatch(getCommentsAsync(postId));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/admin/Documents/React/leitura/src/actions/index.js"],"names":["axios","URL","KEY","GET_POSTS","GET_POST","ADD_POST","DELETE_POST","VOTE_POST","GET_COMMENTS","ADD_COMMENT","DELETE_COMMENT","getPostsAsync","dispatch","get","headers","then","response","type","posts","data","getPostAsync","id","post","addPost","deletePost","delete","votePost","vote","voteScore","valor","console","log","getCommentsAsync","comments","addComment","comment","postId","deleteCommentAsync","commentId"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { URL, KEY } from '../util'\n// CRIA UMA CONSTATE PARA DAR NOME A ACTION, EVITA ERROS DE DIGITAÇAO\nexport const GET_POSTS = 'GET_POSTS'\nexport const GET_POST = 'GET_POST'\nexport const ADD_POST = 'ADD_POST'\nexport const DELETE_POST = 'DELETE_POST'\nexport const VOTE_POST = 'VOTE_POST'\nexport const GET_COMMENTS = 'GET_COMMENTS'\nexport const ADD_COMMENT = 'ADD_COMMENT'\nexport const DELETE_COMMENT = 'DELETE_COMMENT'\n\n// CRIA UMA ACTION ASYCRONA\nexport const getPostsAsync = () => {\n    return dispatch => {\n        // FAZ A REQUISIÇAO AO AXIOS E EM SEGUIDA CHAMA GERA A ACTION COM O TYPE E DADOS DO SERVIDOR\n        axios.get(`${URL}posts`, { headers: { 'Authorization': KEY } })\n            .then(response => {\n                dispatch({\n                    type: GET_POSTS,\n                    posts: response.data\n                })\n            })\n    }\n}\n\n// ACTION ASYCRONA COM PARAMETRO\nexport const getPostAsync = id => {\n    return dispatch => {\n        axios.get(`${URL}posts/${id}`, { headers: { 'Authorization': KEY } })\n            .then(response => {\n                dispatch({\n                    type: GET_POST,\n                    post: response.data\n                })\n            })\n    }\n}\n\nexport const addPost = (post) => {\n    return dispatch => {\n        axios.post(`${URL}posts`, post, { headers: { 'Authorization': KEY } })\n            .then(() => {\n                dispatch({\n                    type: ADD_POST\n                })\n                dispatch(getPostsAsync())\n            })\n    }\n}\n\n\n\nexport const deletePost = (id) => {\n    return dispatch => {\n        axios.delete(`${URL}posts/${id}`, { headers: { 'Authorization': KEY } })\n            .then(() => {\n                dispatch({\n                    type: DELETE_POST\n                })\n\n                dispatch(getPostsAsync())\n            })\n    }\n}\n\nexport const votePost = (id, vote = 10) => {\n    return dispatch => {\n        axios.post(`${URL}posts/${id}`, {voteScore: valor}, { headers: { 'Authorization': KEY } })\n        .then((response) => {\n            dispatch({\n                type: VOTE_POST\n            })\n\n            console.log(response)\n        })\n    }\n}\n\nexport const getCommentsAsync = id => {\n    return dispatch => {\n        axios.get(`${URL}posts/${id}/comments`, { headers: { 'Authorization': KEY } })\n            .then(response => {\n                dispatch({\n                    type: GET_COMMENTS,\n                    comments: response.data\n                })\n            })\n    }\n}\n\nexport const addComment = (comment, postId) => {\n    return dispatch => {\n        axios.post(`${URL}comments`, comment, { headers: { 'Authorization': KEY } })\n            .then(() => {\n                dispatch({\n                    type: ADD_COMMENT\n                })\n                dispatch(getCommentsAsync(postId))\n            })\n    }\n}\n\nexport const deleteCommentAsync = (commentId, postId) => {\n    return dispatch => {\n        axios.delete(`${URL}comments/${commentId}`, { headers: { 'Authorization': KEY } })\n            .then(response => {\n                dispatch({\n                    type: DELETE_COMMENT\n                })\n\n                dispatch(getCommentsAsync(postId))\n            })\n    }\n}"]},"metadata":{},"sourceType":"module"}