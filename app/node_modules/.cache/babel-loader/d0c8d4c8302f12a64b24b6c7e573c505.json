{"ast":null,"code":"import _classCallCheck from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/Documents/React/leitura/src/components/EditComment.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getComment } from '../actions';\n\nvar EditComment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditComment, _Component);\n\n  function EditComment() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditComment);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditComment)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      timeStamp: Date.now(),\n      body: ''\n    };\n\n    _this.onChangeBody = function (event) {\n      var newContent = event.target.value;\n\n      _this.setState({\n        body: newContent\n      });\n    };\n\n    _this.onSaveForm = function (event) {\n      event.preventDefault();\n    };\n\n    return _this;\n  }\n\n  _createClass(EditComment, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      debugger;\n      this.props.dispatch(getComment(this.props.match.params.commentId));\n      debugger;\n      this.setState({\n        body: \"teste\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"jumbotron\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Edit Comment\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"postContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Comment\"), React.createElement(\"textarea\", {\n        className: \"form-control\",\n        id: \"postContent\",\n        rows: \"3\",\n        onChange: function onChange(event) {\n          return _this2.onChangeBody(event);\n        },\n        value: this.state.body,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        onClick: function onClick(event) {\n          return _this2.onSaveForm(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Save\")));\n    }\n  }]);\n\n  return EditComment;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nexport default connect(mapStateToProps)(EditComment);","map":{"version":3,"sources":["/Users/admin/Documents/React/leitura/src/components/EditComment.js"],"names":["React","Component","connect","getComment","EditComment","state","timeStamp","Date","now","body","onChangeBody","event","newContent","target","value","setState","onSaveForm","preventDefault","props","dispatch","match","params","commentId","mapStateToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,YAA3B;;IAEMC,W;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EADP;AAEJC,MAAAA,IAAI,EAAE;AAFF,K;;UAeRC,Y,GAAe,UAACC,KAAD,EAAW;AACtB,UAAIC,UAAU,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA9B;;AACA,YAAKC,QAAL,CAAc;AACVN,QAAAA,IAAI,EAAEG;AADI,OAAd;AAGH,K;;UAEDI,U,GAAa,UAACL,KAAD,EAAW;AACpBA,MAAAA,KAAK,CAACM,cAAN;AACH,K;;;;;;;wCAnBkB;AACf;AACA,WAAKC,KAAL,CAAWC,QAAX,CAAoBhB,UAAU,CAAC,KAAKe,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,SAAzB,CAA9B;AAEA;AACA,WAAKP,QAAL,CAAc;AACVN,QAAAA,IAAI,EAAE;AADI,OAAd;AAGH;;;6BAaQ;AAAA;;AACL,aACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAU,QAAA,SAAS,EAAC,cAApB;AAAmC,QAAA,EAAE,EAAC,aAAtC;AAAoD,QAAA,IAAI,EAAC,GAAzD;AAA6D,QAAA,QAAQ,EAAE,kBAACE,KAAD;AAAA,iBAAW,MAAI,CAACD,YAAL,CAAkBC,KAAlB,CAAX;AAAA,SAAvE;AAA4G,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWI,IAA9H;AAAoI,QAAA,QAAQ,MAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAFJ,EAOI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAkD,QAAA,OAAO,EAAE,iBAACE,KAAD;AAAA,iBAAW,MAAI,CAACK,UAAL,CAAgBL,KAAhB,CAAX;AAAA,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,CADJ,CADJ;AAaH;;;;EA1CqBV,S;;AA6C1B,IAAMsB,eAAe,GAAG,SAAlBA,eAAkB,CAAClB,KAAD,EAAW;AAC/B,SAAOA,KAAP;AACH,CAFD;;AAIA,eAAeH,OAAO,CAACqB,eAAD,CAAP,CAAyBnB,WAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getComment } from '../actions'\n\nclass EditComment extends Component {\n\n    state = {\n        timeStamp: Date.now(),\n        body: ''\n    }\n\n    componentDidMount(){\n        debugger\n        this.props.dispatch(getComment(this.props.match.params.commentId))\n\n        debugger\n        this.setState({\n            body: \"teste\"\n        })\n    }\n\n    onChangeBody = (event) => {\n        let newContent = event.target.value\n        this.setState({\n            body: newContent\n        })\n    }\n\n    onSaveForm = (event) => {\n        event.preventDefault()\n    }\n\n    render() {\n        return (\n            <div className=\"container mt-2\">\n                <form className=\"jumbotron\">\n                    <h2>Edit Comment</h2>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"postContent\">Comment</label>\n                        <textarea className=\"form-control\" id=\"postContent\" rows=\"3\" onChange={(event) => this.onChangeBody(event)} value={this.state.body} required></textarea>\n                    </div>\n\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={(event) => this.onSaveForm(event)}>Save</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nexport default connect(mapStateToProps)(EditComment)"]},"metadata":{},"sourceType":"module"}