{"ast":null,"code":"import _classCallCheck from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/Documents/React/leitura/src/components/EditPost.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getPostAsync, updatePost } from '../actions';\n\nvar EditPost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditPost, _Component);\n\n  function EditPost() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditPost);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditPost)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      title: '',\n      body: ''\n    };\n\n    _this.onChangeTitle = function (event) {\n      var newTitle = event.target.value;\n\n      _this.setState({\n        title: newTitle\n      });\n    };\n\n    _this.onChangeBody = function (event) {\n      var newContent = event.target.value;\n\n      _this.setState({\n        body: newContent\n      });\n    };\n\n    _this.onSaveForm = function (event) {\n      event.preventDefault();\n\n      _this.props.dispatch(updatePost(_this.props.match.params.id, _this.state));\n\n      _this.props.history.push(\"/post/\".concat(_this.props.match.params.id, \"/view\"));\n    };\n\n    return _this;\n  }\n\n  _createClass(EditPost, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch(getPostAsync(this.props.match.params.id));\n      this.setState({\n        title: this.props.posts.title,\n        body: this.props.posts.body\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"jumbotron\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Edit Post\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"postTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"postTitle\",\n        onChange: function onChange(event) {\n          return _this2.onChangeTitle(event);\n        },\n        value: this.state.title,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"postContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Content\"), React.createElement(\"textarea\", {\n        className: \"form-control\",\n        id: \"postContent\",\n        rows: \"3\",\n        onChange: function onChange(event) {\n          return _this2.onChangeBody(event);\n        },\n        value: this.state.body,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        onClick: function onClick(event) {\n          return _this2.onSaveForm(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Save\")));\n    }\n  }]);\n\n  return EditPost;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nexport default connect(mapStateToProps)(EditPost);","map":{"version":3,"sources":["/Users/admin/Documents/React/leitura/src/components/EditPost.js"],"names":["React","Component","connect","getPostAsync","updatePost","EditPost","state","title","body","onChangeTitle","event","newTitle","target","value","setState","onChangeBody","newContent","onSaveForm","preventDefault","props","dispatch","match","params","id","history","push","posts","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getPostAsync, updatePost } from '../actions'\n\nclass EditPost extends Component{\n    state = {\n        title: '',\n        body: ''\n    }\n\n    componentDidMount(){\n        this.props.dispatch(getPostAsync(this.props.match.params.id))\n        this.setState({\n            title: this.props.posts.title,\n            body: this.props.posts.body\n        })\n    }\n\n    onChangeTitle = (event) => {\n        let newTitle = event.target.value\n        this.setState({\n            title: newTitle\n        })\n    }\n\n    onChangeBody = (event) => {\n        let newContent = event.target.value\n        this.setState({\n            body: newContent\n        })\n    }\n\n    onSaveForm = (event) => {\n        event.preventDefault()\n        this.props.dispatch(updatePost(this.props.match.params.id, this.state))\n        this.props.history.push(`/post/${this.props.match.params.id}/view`)\n    }\n\n    render(){\n        return(\n            <div className=\"container mt-2\">\n                <form className=\"jumbotron\">\n                    <h2>Edit Post</h2>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"postTitle\">Title</label>\n                        <input type=\"text\" className=\"form-control\" id=\"postTitle\" onChange={(event) => this.onChangeTitle(event)} value={this.state.title} required></input>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"postContent\">Content</label>\n                        <textarea className=\"form-control\" id=\"postContent\" rows=\"3\" onChange={(event) => this.onChangeBody(event)} value={this.state.body} required></textarea>\n                    </div>\n                \n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={(event) => this.onSaveForm(event)}>Save</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nexport default connect(mapStateToProps)(EditPost)"]},"metadata":{},"sourceType":"module"}