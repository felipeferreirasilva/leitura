{"ast":null,"code":"import axios from 'axios';\nimport { URL, KEY } from '../util'; // CRIA UMA CONSTATE PARA DAR NOME A ACTION, EVITA ERROS DE DIGITAÇAO\n\nexport var GET_POSTS = 'GET_POSTS';\nexport var GET_POST = 'GET_POST';\nexport var ADD_POST = 'ADD_POST';\nexport var DELETE_POST = 'DELETE_POST';\nexport var VOTE_POST = 'VOTE_POST';\nexport var UPDATE_POST = 'UPDATE_POST';\nexport var GET_COMMENTS = 'GET_COMMENTS';\nexport var GET_COMMENT = 'GET_COMMENT';\nexport var ADD_COMMENT = 'ADD_COMMENT';\nexport var DELETE_COMMENT = 'DELETE_COMMENT';\nexport var VOTE_COMMENT = 'VOTE_COMMENT'; // CRIA UMA ACTION ASYCRONA\n\nexport var getPostsAsync = function getPostsAsync() {\n  return function (dispatch) {\n    // FAZ A REQUISIÇAO AO AXIOS E EM SEGUIDA CHAMA GERA A ACTION COM O TYPE E DADOS DO SERVIDOR\n    axios.get(\"\".concat(URL, \"posts\"), {\n      headers: {\n        'Authorization': KEY\n      }\n    }).then(function (response) {\n      dispatch({\n        type: GET_POSTS,\n        posts: response.data\n      });\n    });\n  };\n}; // ACTION ASYCRONA COM PARAMETRO\n\nexport var getPostAsync = function getPostAsync(id) {\n  return function (dispatch) {\n    axios.get(\"\".concat(URL, \"posts/\").concat(id), {\n      headers: {\n        'Authorization': KEY\n      }\n    }).then(function (response) {\n      dispatch({\n        type: GET_POST,\n        post: response.data\n      });\n    });\n  };\n};\nexport var addPost = function addPost(post) {\n  return function (dispatch) {\n    axios.post(\"\".concat(URL, \"posts\"), post, {\n      headers: {\n        'Authorization': KEY\n      }\n    }).then(function () {\n      dispatch({\n        type: ADD_POST\n      });\n      dispatch(getPostsAsync());\n    });\n  };\n};\nexport var updatePost = function updatePost(postId, post) {\n  return function (dispatch) {\n    axios.put(\"\".concat(URL, \"posts/\").concat(postId), post, {\n      headers: {\n        'Authorization': KEY\n      }\n    });\n  };\n};\nexport var deletePost = function deletePost(id) {\n  return function (dispatch) {\n    axios.delete(\"\".concat(URL, \"posts/\").concat(id), {\n      headers: {\n        'Authorization': KEY\n      }\n    }).then(function () {\n      dispatch({\n        type: DELETE_POST\n      });\n      dispatch(getPostsAsync());\n    });\n  };\n};\nexport var votePost = function votePost(id, vote) {\n  return function (dispatch) {\n    axios.post(\"\".concat(URL, \"posts/\").concat(id), vote, {\n      headers: {\n        'Authorization': KEY\n      }\n    }).then(function () {\n      dispatch({\n        type: VOTE_POST\n      });\n      dispatch(getPostAsync(id));\n    });\n  };\n};\nexport var getCommentsAsync = function getCommentsAsync(id) {\n  return function (dispatch) {\n    axios.get(\"\".concat(URL, \"posts/\").concat(id, \"/comments\"), {\n      headers: {\n        'Authorization': KEY\n      }\n    }).then(function (response) {\n      dispatch({\n        type: GET_COMMENTS,\n        comments: response.data\n      });\n    });\n  };\n};\nexport var getComment = function getComment(id) {\n  return function (dispatch) {\n    axios.get(\"\".concat(URL, \"comments/\").concat(id), {\n      headers: {\n        'Authorization': KEY\n      }\n    }).then(function (response) {\n      dispatch({\n        type: GET_COMMENT\n      });\n    });\n  };\n};\nexport var addComment = function addComment(comment, postId) {\n  return function (dispatch) {\n    axios.post(\"\".concat(URL, \"comments\"), comment, {\n      headers: {\n        'Authorization': KEY\n      }\n    }).then(function () {\n      dispatch({\n        type: ADD_COMMENT\n      });\n      dispatch(getCommentsAsync(postId));\n    });\n  };\n};\nexport var deleteCommentAsync = function deleteCommentAsync(commentId, postId) {\n  return function (dispatch) {\n    axios.delete(\"\".concat(URL, \"comments/\").concat(commentId), {\n      headers: {\n        'Authorization': KEY\n      }\n    }).then(function () {\n      dispatch({\n        type: DELETE_COMMENT\n      });\n      dispatch(getCommentsAsync(postId));\n    });\n  };\n};\nexport var voteComment = function voteComment(commentId, vote, postId) {\n  return function (dispatch) {\n    axios.post(\"\".concat(URL, \"comments/\").concat(commentId), vote, {\n      headers: {\n        'Authorization': KEY\n      }\n    }).then(function (r) {\n      dispatch({\n        type: VOTE_POST\n      });\n      dispatch(getCommentsAsync(postId));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/admin/Documents/React/leitura/src/actions/index.js"],"names":["axios","URL","KEY","GET_POSTS","GET_POST","ADD_POST","DELETE_POST","VOTE_POST","UPDATE_POST","GET_COMMENTS","GET_COMMENT","ADD_COMMENT","DELETE_COMMENT","VOTE_COMMENT","getPostsAsync","dispatch","get","headers","then","response","type","posts","data","getPostAsync","id","post","addPost","updatePost","postId","put","deletePost","delete","votePost","vote","getCommentsAsync","comments","getComment","addComment","comment","deleteCommentAsync","commentId","voteComment","r"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { URL, KEY } from '../util'\n// CRIA UMA CONSTATE PARA DAR NOME A ACTION, EVITA ERROS DE DIGITAÇAO\nexport const GET_POSTS = 'GET_POSTS'\nexport const GET_POST = 'GET_POST'\nexport const ADD_POST = 'ADD_POST'\nexport const DELETE_POST = 'DELETE_POST'\nexport const VOTE_POST = 'VOTE_POST'\nexport const UPDATE_POST = 'UPDATE_POST'\nexport const GET_COMMENTS = 'GET_COMMENTS'\nexport const GET_COMMENT = 'GET_COMMENT'\nexport const ADD_COMMENT = 'ADD_COMMENT'\nexport const DELETE_COMMENT = 'DELETE_COMMENT'\nexport const VOTE_COMMENT = 'VOTE_COMMENT'\n\n// CRIA UMA ACTION ASYCRONA\nexport const getPostsAsync = () => {\n    return dispatch => {\n        // FAZ A REQUISIÇAO AO AXIOS E EM SEGUIDA CHAMA GERA A ACTION COM O TYPE E DADOS DO SERVIDOR\n        axios.get(`${URL}posts`, { headers: { 'Authorization': KEY } })\n            .then(response => {\n                dispatch({\n                    type: GET_POSTS,\n                    posts: response.data\n                })\n            })\n    }\n}\n\n// ACTION ASYCRONA COM PARAMETRO\nexport const getPostAsync = id => {\n    return dispatch => {\n        axios.get(`${URL}posts/${id}`, { headers: { 'Authorization': KEY } })\n            .then(response => {\n                dispatch({\n                    type: GET_POST,\n                    post: response.data\n                })\n            })\n    }\n}\n\nexport const addPost = post => {\n    return dispatch => {\n        axios.post(`${URL}posts`, post, { headers: { 'Authorization': KEY } })\n            .then(() => {\n                dispatch({\n                    type: ADD_POST\n                })\n                dispatch(getPostsAsync())\n            })\n    }\n}\n\nexport const updatePost = (postId, post) => {\n    return dispatch => {\n        axios.put(`${URL}posts/${postId}`, post, { headers: { 'Authorization': KEY } })\n    }\n}\n\nexport const deletePost = id => {\n    return dispatch => {\n        axios.delete(`${URL}posts/${id}`, { headers: { 'Authorization': KEY } })\n            .then(() => {\n                dispatch({\n                    type: DELETE_POST\n                })\n\n                dispatch(getPostsAsync())\n            })\n    }\n}\n\nexport const votePost = (id, vote) => {\n    return dispatch => {\n        axios.post(`${URL}posts/${id}`, vote, { headers: { 'Authorization': KEY } })\n        .then(() => {\n            dispatch({\n                type: VOTE_POST\n            })\n\n            dispatch(getPostAsync(id))\n        })\n    }\n}\n\nexport const getCommentsAsync = id => {\n    return dispatch => {\n        axios.get(`${URL}posts/${id}/comments`, { headers: { 'Authorization': KEY } })\n            .then(response => {\n                dispatch({\n                    type: GET_COMMENTS,\n                    comments: response.data\n                })\n            })\n    }\n}\n\nexport const getComment = id => {\n    return dispatch => {\n        axios.get(`${URL}comments/${id}`, { headers: { 'Authorization': KEY } })\n            .then(response => {\n                dispatch({\n                    type: GET_COMMENT\n                })\n            })\n    }\n}\n\nexport const addComment = (comment, postId) => {\n    return dispatch => {\n        axios.post(`${URL}comments`, comment, { headers: { 'Authorization': KEY } })\n            .then(() => {\n                dispatch({\n                    type: ADD_COMMENT\n                })\n                dispatch(getCommentsAsync(postId))\n            })\n    }\n}\n\nexport const deleteCommentAsync = (commentId, postId) => {\n    return dispatch => {\n        axios.delete(`${URL}comments/${commentId}`, { headers: { 'Authorization': KEY } })\n            .then(() => {\n                dispatch({\n                    type: DELETE_COMMENT\n                })\n\n                dispatch(getCommentsAsync(postId))\n            })\n    }\n}\n\nexport const voteComment = (commentId, vote, postId) => {\n    return dispatch => {\n        axios.post(`${URL}comments/${commentId}`, vote, { headers: { 'Authorization': KEY } })\n        .then((r) => {\n            dispatch({\n                type: VOTE_POST\n            })\n            \n            dispatch(getCommentsAsync(postId))\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}