{"ast":null,"code":"import axios from 'axios';\nimport { URL, KEY } from '../util'; // CRIA UMA CONSTATE PARA DAR NOME A ACTION, EVITA ERROS DE DIGITAÇAO\n\nexport var GET_POSTS = 'GET_POSTS';\nexport var GET_POST = 'GET_POST';\nexport var GET_COMMENTS = 'GET_COMMENTS'; // CRIA UMA ACTION ASYCRONA\n\nexport var getPostsAsync = function getPostsAsync() {\n  return function (dispatch) {\n    // FAZ A REQUISIÇAO AO AXIOS E EM SEGUIDA CHAMA GERA A ACTION COM O TYPE E DADOS DO SERVIDOR\n    axios.get(\"\".concat(URL, \"posts\"), {\n      headers: {\n        'Authorization': KEY\n      }\n    }).then(function (response) {\n      dispatch({\n        type: GET_POSTS,\n        posts: response.data\n      });\n    });\n  };\n}; // ACTION ASYCRONA COM PARAMETRO\n\nexport var getPostAsync = function getPostAsync(id) {\n  return function (dispatch) {\n    axios.get(\"\".concat(URL, \"posts/\").concat(id), {\n      headers: {\n        'Authorization': KEY\n      }\n    }).then(function (response) {\n      dispatch({\n        type: GET_POST,\n        post: response.data\n      });\n    });\n  };\n};\nexport var getCommentsAsync = function getCommentsAsync(id) {\n  return function (dispatch) {};\n};","map":{"version":3,"sources":["/Users/admin/Documents/React/leitura/src/actions/index.js"],"names":["axios","URL","KEY","GET_POSTS","GET_POST","GET_COMMENTS","getPostsAsync","dispatch","get","headers","then","response","type","posts","data","getPostAsync","id","post","getCommentsAsync"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,SAAzB,C,CACA;;AACA,OAAO,IAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,YAAY,GAAG,cAArB,C,CAEP;;AACA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC/B,SAAO,UAAAC,QAAQ,EAAI;AACf;AACAP,IAAAA,KAAK,CAACQ,GAAN,WAAaP,GAAb,YAAyB;AAAEQ,MAAAA,OAAO,EAAE;AAAE,yBAAiBP;AAAnB;AAAX,KAAzB,EACKQ,IADL,CACU,UAAAC,QAAQ,EAAI;AACdJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAET,SADD;AAELU,QAAAA,KAAK,EAAEF,QAAQ,CAACG;AAFX,OAAD,CAAR;AAIH,KANL;AAOH,GATD;AAUH,CAXM,C,CAaP;;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,EAAE,EAAI;AAC9B,SAAO,UAAAT,QAAQ,EAAI;AACfP,IAAAA,KAAK,CAACQ,GAAN,WAAaP,GAAb,mBAAyBe,EAAzB,GAA+B;AAAEP,MAAAA,OAAO,EAAE;AAAE,yBAAiBP;AAAnB;AAAX,KAA/B,EACKQ,IADL,CACU,UAAAC,QAAQ,EAAI;AACdJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAER,QADD;AAELa,QAAAA,IAAI,EAAEN,QAAQ,CAACG;AAFV,OAAD,CAAR;AAIH,KANL;AAOH,GARD;AASH,CAVM;AAYP,OAAO,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAF,EAAE,EAAI;AAClC,SAAO,UAAAT,QAAQ,EAAI,CAElB,CAFD;AAGH,CAJM","sourcesContent":["import axios from 'axios'\nimport { URL, KEY } from '../util'\n// CRIA UMA CONSTATE PARA DAR NOME A ACTION, EVITA ERROS DE DIGITAÇAO\nexport const GET_POSTS = 'GET_POSTS'\nexport const GET_POST = 'GET_POST'\nexport const GET_COMMENTS = 'GET_COMMENTS'\n\n// CRIA UMA ACTION ASYCRONA\nexport const getPostsAsync = () => {\n    return dispatch => {\n        // FAZ A REQUISIÇAO AO AXIOS E EM SEGUIDA CHAMA GERA A ACTION COM O TYPE E DADOS DO SERVIDOR\n        axios.get(`${URL}posts`, { headers: { 'Authorization': KEY } })\n            .then(response => {\n                dispatch({\n                    type: GET_POSTS,\n                    posts: response.data\n                })\n            })\n    }\n}\n\n// ACTION ASYCRONA COM PARAMETRO\nexport const getPostAsync = id => {\n    return dispatch => {\n        axios.get(`${URL}posts/${id}`, { headers: { 'Authorization': KEY } })\n            .then(response => {\n                dispatch({\n                    type: GET_POST,\n                    post: response.data\n                })\n            })\n    }\n}\n\nexport const getCommentsAsync = id => {\n    return dispatch => {\n        \n    }\n}"]},"metadata":{},"sourceType":"module"}