{"ast":null,"code":"import _classCallCheck from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/Documents/React/leitura/src/components/Comments.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getCommentsAsync } from '../actions';\n\nvar Comments =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Comments, _Component);\n\n  function Comments() {\n    _classCallCheck(this, Comments);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Comments).apply(this, arguments));\n  }\n\n  _createClass(Comments, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch(getCommentsAsync(this.props.postId));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.comments);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"jumbotron\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Comments\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, this.props.comments.length > 0 && this.props.comments.map(function (comment) {\n        return React.createElement(\"div\", {\n          key: comment.id,\n          className: \"jumbotron\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, comment.body), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"text-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-success btn-sm mr-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-thumbs-up\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          className: \"btn btn-danger mr-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-thumbs-down\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }))));\n      }))));\n    }\n  }]);\n\n  return Comments;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nexport default connect(mapStateToProps)(Comments);","map":{"version":3,"sources":["/Users/admin/Documents/React/leitura/src/components/Comments.js"],"names":["React","Component","connect","getCommentsAsync","Comments","props","dispatch","postId","console","log","comments","length","map","comment","id","body","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,YAAjC;;IAEMC,Q;;;;;;;;;;;;;wCACkB;AAChB,WAAKC,KAAL,CAAWC,QAAX,CAAoBH,gBAAgB,CAAC,KAAKE,KAAL,CAAWE,MAAZ,CAApC;AACH;;;6BAEQ;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWK,QAAvB;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKL,KAAL,CAAWK,QAAX,CAAoBC,MAApB,GAA6B,CAA7B,IACG,KAAKN,KAAL,CAAWK,QAAX,CAAoBE,GAApB,CAAwB,UAAAC,OAAO;AAAA,eAC3B;AAAK,UAAA,GAAG,EAAEA,OAAO,CAACC,EAAlB;AAAsB,UAAA,SAAS,EAAC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMD,OAAO,CAACE,IAAd,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAGI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAQ,UAAA,SAAS,EAAC,6BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgD;AAAG,UAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhD,CADJ,EAEI;AAAQ,UAAA,SAAS,EAAC,qBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwC;AAAG,UAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAxC,CAFJ,CAHJ,CAD2B;AAAA,OAA/B,CAFR,CAFJ,CADJ,CADJ;AAqBH;;;;EA5BkBd,S;;AA+BvB,IAAMe,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAOA,KAAP;AACH,CAFD;;AAIA,eAAef,OAAO,CAACc,eAAD,CAAP,CAAyBZ,QAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getCommentsAsync } from '../actions'\n\nclass Comments extends Component {\n    componentDidMount() {\n        this.props.dispatch(getCommentsAsync(this.props.postId))\n    }\n\n    render() {\n        console.log(this.props.comments)\n        return (\n            <div>\n                <div className=\"jumbotron\">\n                    <h3 className=\"mb-3\">Comments</h3>\n                    <ul>\n                        {this.props.comments.length > 0 &&\n                            this.props.comments.map(comment => (\n                                <div key={comment.id} className=\"jumbotron\">\n                                    <li >{comment.body}</li>\n                                    <hr></hr>\n                                    <div className=\"text-right\">\n                                        <button className=\"btn btn-success btn-sm mr-1\"><i className=\"fas fa-thumbs-up\"></i></button>\n                                        <button className=\"btn btn-danger mr-1\"><i className=\"fas fa-thumbs-down\"></i></button>\n                                    </div>\n                                </div>\n                            ))\n                        }\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nexport default connect(mapStateToProps)(Comments)"]},"metadata":{},"sourceType":"module"}