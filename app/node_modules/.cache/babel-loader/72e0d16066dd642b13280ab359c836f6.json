{"ast":null,"code":"import { GET_POSTS, GET_POST, ADD_POST, DELETE_POST, GET_COMMENTS, DELETE_COMMENT, ADD_COMMENT } from '../actions'; // O COMBINEREDUCERS PERMITE IMPLEMENTAR VARIAS STORES EM UMA\n\nimport { combineReducers } from 'redux'; // REDUCER QUE GERA O STATE INICIAL COMPARANDO O ACTION.TYPE E RETORNANDO O VALOR GERADO NA ACTION\n\nvar posts = function posts() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_POSTS:\n      return action.posts;\n\n    case GET_POST:\n      return action.post;\n\n    case ADD_POST:\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nvar comments = function comments() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_COMMENTS:\n      return action.comments;\n\n    case DELETE_COMMENT:\n      return state;\n\n    case ADD_COMMENT:\n      return state;\n\n    default:\n      return state;\n  }\n}; // EXPORTA O COMBINEREDUCERS COMO STORE PRINCIPAL PASSANDO AS STORES COMO OBJETOS\n\n\nexport default combineReducers({\n  posts: posts,\n  comments: comments\n});","map":{"version":3,"sources":["/Users/admin/Documents/React/leitura/src/reducers/index.js"],"names":["GET_POSTS","GET_POST","ADD_POST","DELETE_POST","GET_COMMENTS","DELETE_COMMENT","ADD_COMMENT","combineReducers","posts","state","action","type","post","comments"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,QAA9B,EAAwCC,WAAxC,EAAqDC,YAArD,EAAmEC,cAAnE,EAAmFC,WAAnF,QAAsG,YAAtG,C,CACA;;AACA,SAASC,eAAT,QAAgC,OAAhC,C,CAEA;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAClC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,SAAL;AACI,aAAOU,MAAM,CAACF,KAAd;;AACJ,SAAKP,QAAL;AACI,aAAOS,MAAM,CAACE,IAAd;;AACJ,SAAKV,QAAL;AACI,aAAOO,KAAP;;AACJ;AACI,aAAOA,KAAP;AARR;AAUH,CAXD;;AAaA,IAAMI,QAAQ,GAAG,SAAXA,QAAW,GAAwB;AAAA,MAAvBJ,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACrC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,YAAL;AACI,aAAOM,MAAM,CAACG,QAAd;;AACJ,SAAKR,cAAL;AACI,aAAOI,KAAP;;AACJ,SAAKH,WAAL;AACI,aAAOG,KAAP;;AACJ;AACI,aAAOA,KAAP;AARR;AAUH,CAXD,C,CAaA;;;AACA,eAAeF,eAAe,CAAC;AAC3BC,EAAAA,KAAK,EAALA,KAD2B;AAE3BK,EAAAA,QAAQ,EAARA;AAF2B,CAAD,CAA9B","sourcesContent":["import { GET_POSTS, GET_POST, ADD_POST, DELETE_POST, GET_COMMENTS, DELETE_COMMENT, ADD_COMMENT } from '../actions'\n// O COMBINEREDUCERS PERMITE IMPLEMENTAR VARIAS STORES EM UMA\nimport { combineReducers } from 'redux';\n\n// REDUCER QUE GERA O STATE INICIAL COMPARANDO O ACTION.TYPE E RETORNANDO O VALOR GERADO NA ACTION\nconst posts = (state = {}, action) => {\n    switch (action.type) {\n        case GET_POSTS:\n            return action.posts\n        case GET_POST:\n            return action.post\n        case ADD_POST:\n            return state\n        default:\n            return state\n    }\n}\n\nconst comments = (state = {}, action) => {\n    switch(action.type){\n        case GET_COMMENTS:\n            return action.comments\n        case DELETE_COMMENT:\n            return state\n        case ADD_COMMENT:\n            return state\n        default:\n            return state\n    }\n}\n\n// EXPORTA O COMBINEREDUCERS COMO STORE PRINCIPAL PASSANDO AS STORES COMO OBJETOS\nexport default combineReducers({\n    posts,\n    comments\n});"]},"metadata":{},"sourceType":"module"}