{"ast":null,"code":"import _classCallCheck from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Documents/React/leitura/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/Documents/React/leitura/src/components/NewComment.js\";\nimport React, { Component } from 'react';\nimport { addComment } from '../actions';\nimport { connect } from 'react-redux';\n\nvar NewComment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewComment, _Component);\n\n  function NewComment() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewComment);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewComment)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      id: undefined,\n      timestamp: Date.now(),\n      title: undefined,\n      body: undefined,\n      parentDeleted: false,\n      parentId: undefined,\n      votescore: 0,\n      deleted: false\n    };\n\n    _this.onChangeBody = function (event) {\n      var newContent = event.target.value;\n\n      _this.setState({\n        body: newContent\n      });\n    };\n\n    _this.onChangeAuthor = function (event) {\n      var newAuthor = event.target.value;\n\n      _this.setState({\n        author: newAuthor,\n        id: Date.now() + newAuthor,\n        parentId: _this.props.postId\n      });\n    };\n\n    _this.onSaveForm = function (event) {\n      event.preventDefault();\n      var comment = _this.state;\n      var postId = _this.props.postId;\n\n      _this.props.dispatch(addComment(comment, postId));\n    };\n\n    return _this;\n  }\n\n  _createClass(NewComment, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"form\", {\n        className: \"jumbotron\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"New Comment\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"postContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Comment\"), React.createElement(\"textarea\", {\n        className: \"form-control\",\n        id: \"postContent\",\n        rows: \"3\",\n        onChange: function onChange(event) {\n          return _this2.onChangeBody(event);\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"postAuthor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Author\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"postAuthor\",\n        onChange: function onChange(event) {\n          return _this2.onChangeAuthor(event);\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        onClick: function onClick(event) {\n          return _this2.onSaveForm(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Save\"));\n    }\n  }]);\n\n  return NewComment;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nexport default connect(mapStateToProps)(NewComment);","map":{"version":3,"sources":["/Users/admin/Documents/React/leitura/src/components/NewComment.js"],"names":["React","Component","addComment","connect","NewComment","state","id","undefined","timestamp","Date","now","title","body","parentDeleted","parentId","votescore","deleted","onChangeBody","event","newContent","target","value","setState","onChangeAuthor","newAuthor","author","props","postId","onSaveForm","preventDefault","comment","dispatch","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { addComment } from '../actions'\nimport { connect } from 'react-redux'\n\nclass NewComment extends Component {\n\n    state = {\n        id: undefined,\n        timestamp: Date.now(),\n        title: undefined,\n        body: undefined,\n        parentDeleted: false,\n        parentId: undefined,\n        votescore: 0,\n        deleted: false\n    }\n\n    onChangeBody = (event) => {\n        let newContent = event.target.value\n        this.setState({\n            body: newContent\n        })\n    }\n\n    onChangeAuthor = (event) => {\n        let newAuthor = event.target.value\n        this.setState({\n            author: newAuthor,\n            id: Date.now() + newAuthor,\n            parentId: this.props.postId\n        })\n    }\n\n    onSaveForm = (event) => {\n        event.preventDefault()\n        let comment = this.state\n        let postId = this.props.postId\n        this.props.dispatch(addComment(comment, postId))\n    }\n\n    render() {\n        return (\n            <form className=\"jumbotron\">\n                <h2>New Comment</h2>\n                <div className=\"form-group\">\n                    <label htmlFor=\"postContent\">Comment</label>\n                    <textarea className=\"form-control\" id=\"postContent\" rows=\"3\" onChange={(event) => this.onChangeBody(event)} required></textarea>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"postAuthor\">Author</label>\n                    <input type=\"text\" className=\"form-control\" id=\"postAuthor\" onChange={(event) => this.onChangeAuthor(event)} required></input>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={(event) => this.onSaveForm(event)}>Save</button>\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nexport default connect(mapStateToProps)(NewComment)"]},"metadata":{},"sourceType":"module"}